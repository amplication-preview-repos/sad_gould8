/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Entry as PrismaEntry } from "@prisma/client";

export class EntryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EntryCountArgs, "select">): Promise<number> {
    return this.prisma.entry.count(args);
  }

  async entries(args: Prisma.EntryFindManyArgs): Promise<PrismaEntry[]> {
    return this.prisma.entry.findMany(args);
  }
  async entry(args: Prisma.EntryFindUniqueArgs): Promise<PrismaEntry | null> {
    return this.prisma.entry.findUnique(args);
  }
  async createEntry(args: Prisma.EntryCreateArgs): Promise<PrismaEntry> {
    return this.prisma.entry.create(args);
  }
  async updateEntry(args: Prisma.EntryUpdateArgs): Promise<PrismaEntry> {
    return this.prisma.entry.update(args);
  }
  async deleteEntry(args: Prisma.EntryDeleteArgs): Promise<PrismaEntry> {
    return this.prisma.entry.delete(args);
  }
}
